name: "[SparrowStudios] ssCaptcha Bot CI"

on:
  push:
    branches:
      - "master"
      - "develop"
      - "feature/**"
  pull_request:
    branches:
      - "master"
      - "develop"
      - "feature/**"

env:
  bot-name: ssCaptcha-bot

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Generate ENV File
      run: |
        "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> "${{ github.workspace }}/.env"
        "GUILD_ID=${{ secrets.GUILD_ID }}" >> "${{ github.workspace }}/.env"
        "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> "${{ github.workspace }}/.env"
        "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> "${{ github.workspace }}/.env"
        "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> "${{ github.workspace }}/.env"
        "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> "${{ github.workspace }}/.env"
        "MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}" >> "${{ github.workspace }}/.env"

    - name: Build Dependencies
      run: |
        npm install
        & "$env:APPDATA\npm\tsc.cmd" 

    - name: Build Project
      run: |
        echo "Creating project build directory" 
        New-Item -Path "${{ github.workspace }}/bld" -ItemType "directory"
        New-Item -Path "${{ github.workspace }}/bld/${{ env.bot-name }}" -ItemType "directory"
        New-Item -Path "${{ github.workspace }}/bld/${{ env.bot-name }}/logs" -ItemType "directory"
        New-Item -Path "${{ github.workspace }}/bld/${{ env.bot-name }}/error" -ItemType "directory"

        $rootSourceDir = "${{ github.workspace }}"
        $rootDestinationDir = "${{ github.workspace }}/bld/${{ env.bot-name }}"
        $targetFolders = "assets", "dist", "node_modules"

        foreach ($folder in $targetFolders) {
          echo "Copying files from folder $folder"
          $sourceDir = Join-Path -Path $rootSourceDir -ChildPath $folder
          $destinationDir = Join-Path -Path $rootDestinationDir -ChildPath $folder

          Copy-Item -Path $sourceDir -Destination $destinationDir -Recurse -Force
          Get-ChildItem -Attributes D -Path "$sourceDir" -Recurse | ForEach-Object { 
            $sourcePath = $_.FullName
            $relativePath = $sourcePath.Substring($sourceDir.Length + 1)
            $destinationPath = Join-Path -Path $destinationDir -ChildPath $relativePath
            echo "Copying folder .\$folder\$relativePath => $destinationPath"
            Copy-Item -Path $sourcePath -Destination $destinationPath -Recurse -Force
          }
        }

        echo "Copying misc files"
        Copy-Item "${{ github.workspace }}/.env" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/package.json" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/LICENSE" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/README.md" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/run.cmd" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse

        echo "Compressing project to ZIP"
        Compress-Archive -Path "${{ github.workspace }}/bld/${{ env.bot-name }}" -DestinationPath "${{ github.workspace }}/bld/${{ env.bot-name }}.zip"
        
    - name: Upload Build Artifact
      if: ${{ github.event_name == 'push' && ((github.base_ref == 'master' || github.ref == 'refs/heads/master')) }}
      uses: actions/upload-artifact@v3
      with:
        name: bot-deploy-${{ env.bot-name }}
        path: ${{ github.workspace }}/bld/${{ env.bot-name }}.zip
        retention-days: 1


  deploy-prod:
    needs: build
    if: ${{ github.event_name == 'push' && ((github.base_ref == 'master' || github.ref == 'refs/heads/master')) }}
    runs-on: 
      - self-hosted
      - elevated

    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: bot-deploy-${{ env.bot-name }}
        path: ${{ github.workspace }}

    - name: Shutdown Current Bot Service
      run: |
        & "C:\mssm\mssm.exe" stop ${{ env.bot-name }}

    - name: Clear Current Prod Dir
      run: Remove-Item Z:\${{ env.bot-name }}\* -Recurse -Force

    - name: Unzip Artifact To Production Dir
      run: Expand-Archive ${{ github.workspace }}\${{ env.bot-name }}.zip -DestinationPath Z:\ -PassThru

    - name: Start Bot Service
      run: |
        & "C:\mssm\mssm.exe" start ${{ env.bot-name }}
