name: "[SparrowStudios] ssCaptcha Bot CI"

on:
  push:
    branches:
      - "master"
      - "develop"
      - "feature/**"
  pull_request:
    branches:
      - "master"
      - "develop"
      - "feature/**"

env:
  bot-name: ssCaptcha-bot

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build Dependencies
      run: |
        npm i
        npm i --save typescript --global

    - name: Install Typescript
      uses: icrawl/action-tsc@v1

    - name: Build File Directory
      run : |
        New-Item -Path "${{ github.workspace }}/bld" -ItemType "directory"
        New-Item -Path "${{ github.workspace }}/bld/${{ env.bot-name }}" -ItemType "directory"
        New-Item -Path "${{ github.workspace }}/bld/${{ env.bot-name }}/logs" -ItemType "directory"
        New-Item -Path "${{ github.workspace }}/bld/${{ env.bot-name }}/error" -ItemType "directory"

        $rootSourceDir = "${{ github.workspace }}"
        $rootDestinationDir = "${{ github.workspace }}/bld/${{ env.bot-name }}"
        $targetFolders = "assets", "dist", "node_modules"

        foreach ($folder in $targetFolders) {
          $sourceDir = Join-Path -Path $rootSourceDir -ChildPath "node_modules"
          $destinationDir = Join-Path -Path $rootDestinationDir -ChildPath "node_modules"
          Get-ChildItem -Attributes D -Path "$sourceDir\*" -Recurse | ForEach-Object { 
            $sourcePath = $_.FullName
            $relativePath = $sourcePath.Substring($sourceDir.Length + 1)
            $destinationPath = Join-Path -Path $destinationDir -ChildPath $relativePath
            echo "Copying folder .\$relativePath => $destinationPath"
            Copy-Item -Path $sourcePath -Destination $destinationPath -Recurse -Force
          }
        }

        Copy-Item "${{ github.workspace }}/.env" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/package-lock.json" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/package.json" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/LICENSE" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse
        Copy-Item "${{ github.workspace }}/README.md" -Destination "${{ github.workspace }}/bld/${{ env.bot-name }}" -Force -Recurse

    - name: Build Dependencies
      run: |
        cd "bld/${{ env.bot-name }}"
        npm i
        
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: bot-deploy-${{ env.bot-name }}
        path: ${{ github.workspace }}/bld
        retention-days: 1


  deploy-prod:
    needs: build
    if: ${{ github.event_name == 'push' && ((github.base_ref == 'master' || github.ref == 'refs/heads/master')) }}
    runs-on: self-hosted

    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: bot-deploy-${{ env.bot-name }}
        path: ${{ github.workspace }}

    - name: Build project
      run: echo BUILD CODE HERE

    - name: Deploy to dev server
      uses: garygrossgarten/github-action-scp@release
      with:
        local: ${{ github.workspace }}
        remote: C:\fivem-server\txData\developmentServer1\resources\[dev-scripts]
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
